#!/bin/bash

BASE=$(realpath "$(dirname "$0")")

sourceDir=$BASE/src
binDir=$BASE/bin
dependenciesDir=$BASE/dep

if [[ ! -d "$sourceDir" ]]; then
  echo "Source directory not found: $sourceDir"
  exit
fi

if [[ ! -d "$dependenciesDir" ]]; then
  echo "Dependencies directory not found, please pull dependencies first: ./pull-dependencies.sh"
  exit
fi

if [[ ! -d "$binDir" ]]; then
  echo "Create $binDir"
  mkdir -p "$binDir"
fi

### Functions ###

function copy_script() {
  src="$1"
  if [ ! -f "$src" ]; then
    echo "File not found: $src"
    return
  fi

  dst="$2"
  if [ ! -d "$(dirname "$dst")" ]; then
    echo "Dir does not exist: $dst"
    return
  fi

  {
    echo "#!/bin/bash"
    echo "#### DO NOT EDIT THIS FILE ####"
    echo "# COPIED FROM $src"
    echo "# EDIT THERE and then call build.sh"
  } >"$dst"
  tail -n +2 "$src" >>"$dst"
  chmod +x "$dst"
}

### Main ###

cd "$BASE" || exit
gcc -Wall -I"$dependenciesDir" -o "$binDir/archive" "$sourceDir/archive.c" -lbsd
gcc -Wall -I"$dependenciesDir" -o "$binDir/archive-metadata" "$sourceDir/archive-metadata.c" -lbsd
gcc -Wall -I"$dependenciesDir" -o "$binDir/archive-metadata-db" "$sourceDir/archive-metadata-db.c" -lbsd -lmysqlclient
gcc -Wall -I"$dependenciesDir" -o "$binDir/archive-export" "$sourceDir/archive-export.c" -lbsd
gcc -Wall -I"$dependenciesDir" -o "$binDir/archive-cat" "$sourceDir/archive-cat.c" -lbsd
gcc -Wall -I"$dependenciesDir" -o "$binDir/archive-tempname" "$sourceDir/archive-tempname.c" -lbsd

gcc -Wall -I"$dependenciesDir" -o "$binDir/tokenizer" "$dependenciesDir/ctextutils/src/tokenizer.c"
gcc -Wall -D_GNU_SOURCE -I"$dependenciesDir" -o "$binDir/indexer" "$dependenciesDir/ctextutils/src/indexer.c" -lmysqlclient -lm
gcc -Wall -D_GNU_SOURCE -I"$dependenciesDir" -o "$binDir/mailparser" "$dependenciesDir/ctextutils/src/mailparser.c"

copy_script "$BASE/dep/ctextutils/filter/convert-to-text.sh" "$BASE/filter/convert-to-text.sh"
copy_script "$BASE/dep/ctextutils/filter/cat-mime-message.sh" "$BASE/filter/cat-mime-message.sh"
